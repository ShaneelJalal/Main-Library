# FileNotFoundError
# with open("a_file.txt") as file:
#     contents = file.read()

# KeyError
# a_dictionary = {"key": "value"}
# value = a_dictionary["non_existent_key"]

# IndexError
# fruit_list = ["Apple", "Banana", "Pear"]
# fruit = fruit_list[3]

# TypeError
# text = "abc"
# print(text + 5)

# Exception Handling
# try:
#     pass  # Something that might cause an exception
# except Exception:
#     pass  # Do this if there was an exception
# else:
#     pass  # Do this if there were no exceptions
# finally:
#     pass  # Do this no matter what happens

# Raising Exceptions
# FileNotFoundError
try:
    file = open("a_file.txt")
    a_dictionary = {"key": "value"}
    print(a_dictionary["asdasdf"])  # Error is caught, proceeds with the code

except FileNotFoundError:  # this will return error without another exception
    # print("There was an error")
    file = open("a_file.txt", "w")  # Creates file as none was present
    file.write("Something")
# except KeyError:
#     print("That key does not exist") # Exception caught

except KeyError as error_message:  # A better way to catch the error
    print(f"That key {error_message} does not exist")

else:
    content = file.read()
    print(content)  # first instance with no file will return an error

finally:
    file.close()
    print("File was closed")
