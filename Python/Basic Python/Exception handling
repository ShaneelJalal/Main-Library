# FileNotFoundError
# with open("a_file.txt") as file:
#     contents = file.read()

# KeyError
# a_dictionary = {"key": "value"}
# value = a_dictionary["non_existent_key"]

# IndexError
# fruit_list = ["Apple", "Banana", "Pear"]
# fruit = fruit_list[3]

# TypeError
# text = "abc"
# print(text + 5)

# Exception Handling
# try:
#     pass  # Something that might cause an exception
# except Exception:
#     pass  # Do this if there was an exception
# else:
#     pass  # Do this if there were no exceptions
# finally:
#     pass  # Do this no matter what happens

# Raising Exceptions
# FileNotFoundError
# try:
#     file = open("a_file.txt")
#     a_dictionary = {"key": "value"}
#     print(a_dictionary["asdasdf"])  # Error is caught, proceeds with the code

# except FileNotFoundError:  # this will return error without another exception
#     # print("There was an error")
#     file = open("a_file.txt", "w")  # Creates file as none was present
#     file.write("Something")
# # except KeyError:
# #     print("That key does not exist") # Exception caught

# except KeyError as error_message:  # A better way to catch the error
#     print(f"That key {error_message} does not exist")

# else:
#     content = file.read()
#     print(content)  # first instance with no file will return an error

# finally:
#     file.close()
#     print("File was closed")
# 	raise TypeError("This is an error that I made up")  # Raises an error
# 	# raise Exception("An error happened")  # Raises an error

# Raising Exceptions

#height = float(input("Height: "))
#weight = float(input("Weight: "))

#if height > 3:
#    raise ValueError("Human height should not be over 3 meters")
#bmi = weight / height**2
#print(bmi)


# Exception handling exercises

# Exercise 1
# fruits = eval(input())
# fruits = ['apple', 'banana', 'cherry']


# def make_pie(index):
#     try:
#         fruit = fruits[index]
#         print(fruit + " pie")
#     except IndexError:
#         print("Fruit pie")
#     else:
#         print(fruit + " pie")


# make_pie(4)

# Exercise 2
# facebook_posts = eval(input())
# facebook_posts = [
# 	{'Likes': 21, 'Comments': 2}, 
# 	{'Likes': 13, 'Comments': 2, 'Shares': 1}, 
# 	{'Likes': 33, 'Comments': 8, 'Shares': 3}, 
# 	{'Comments': 4, 'Shares': 2}, 
# 	{'Comments': 1, 'Shares': 1}, 
# 	{'Likes': 19, 'Comments': 3}
# ]

# total_likes = 0

# try:
# 	for post in facebook_posts:
# 		total_likes = total_likes + post['Likes']
# except KeyError:
# 	pass


# print(total_likes) # 67
